.comp 920 00011101001000
.start __HELP_Start
.depend "_SystemEnumStrict" "20200116013416"
.depend "_SystemStrictLists" "20200116013416"
.depend "StdStrictLists" "20200116013416"
.depend "_SystemEnum" "20200116013416"
.depend "StdEnum" "20200116013416"
.depend "StdMisc" "20200116013416"
.depend "StdFunctions" "20200116013416"
.depend "StdCharList" "20200116013416"
.depend "StdTuple" "20200116013416"
.depend "StdOrdList" "20200116013416"
.depend "StdList" "20200116013416"
.depend "StdClass" "20200116013416"
.depend "StdFile" "20200116013416"
.depend "StdString" "20200116013416"
.depend "_SystemArray" "20200116013416"
.depend "StdArray" "20200116013416"
.depend "StdChar" "20200116013416"
.depend "StdReal" "20200116013416"
.depend "StdInt" "20200116013416"
.depend "StdOverloaded" "20200116013416"
.depend "StdBool" "20200116013416"
.depend "StdEnv" "20200116013416"
.module m_HELP "HELP" "20200604170832"
.endinfo
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod StdInt
.implab e_StdInt_s==;16
.implab e_StdInt_srem;28
.impmod StdBool
.implab e_StdBool_snot
.export __HELP_Start
.o 0 0
__HELP_Start
	build _ 0 n2
.d 1 0
	jmp _driver
.n 0 _
.o 1 0
n2
	push_node _cycle_in_spine 0
.d 0 0
	jsr ea2
.o 0 1 b
	fillB_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 0 0
ea2
.o 0 0
s2
	pushI 64
.d 0 1 i
	jmp s1
.o 0 1 i
s1
	pushI 4
	push_b 1
	remI
	pushI 0
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	eqI
	jmp_false else.2
	pushI 100
	push_b 1
	remI
	pushI 0
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	eqI
	notB
	jmp_true then.1
else.2
	pushI 400
	push_b 1
	remI
	pushI 0
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	eqI
	jmp_false else.1
then.1
	pop_b 1
	pushB TRUE
.d 0 1 b
	rtn
else.1
	pop_b 1
	pushB FALSE
.d 0 1 b
	rtn
